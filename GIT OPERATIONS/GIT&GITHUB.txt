ЁЯФ╣ 1. ржХрзЗржи (Why Git ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЛ?)

ржЖржорж╛ржжрзЗрж░ ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ version control рж░рж╛ржЦрж╛рж░ ржЬржирзНржп (ржХрзЗ ржХржмрзЗ ржХрзЛржи ржХрзЛржб рж▓рж┐ржЦрзЗржЫрзЗ / ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗржЫрзЗ)ред

Team ржП ржХрж╛ржЬ ржХрж░рж▓рзЗ collaboration ржХрж░рж╛рж░ ржЬржирзНржпред

ржнрзБрж▓ рж╣рж▓рзЗ ржЖржЧрзЗрж░ version ржП ржлрж┐рж░рзЗ ржпрж╛ржУржпрж╝рж╛рж░ ржЬржирзНржпред

Professional ржХрж╛ржЬрзЗрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ code history ржкрзНрж░ржорж╛ржг рж╣рж┐рж╕рж╛ржмрзЗ ржжрж░ржХрж╛рж░ рж╣ржпрж╝ред

ЁЯФ╣ 2. ржХржЦржи (When Git Operation ржХрж░ржмрзЛ?)

| ржХрж╛ржЬ          | ржХржЦржи ржХрж░рждрзЗ рж╣ржмрзЗ                                             |
| ------------ | -------------------------------------------------------- |
| `git init`   | ржПржХржжржо ржирждрзБржи project рждрзИрж░рж┐ ржХрж░рж╛рж░ рж╕ржорзЯ                          |
| `git clone`  | ржЕржирзНржпрзЗрж░ project ржирж┐ржЬрзЗрж░ ржХржорзНржкрж┐ржЙржЯрж╛рж░рзЗ ржирж╛ржорж╛ржирзЛрж░ рж╕ржорзЯ              |
| `git add`    | ржлрж╛ржЗрж▓ edit ржмрж╛ ржирждрзБржи ржлрж╛ржЗрж▓ create ржХрж░рж╛рж░ ржкрж░                    |
| `git commit` | ржХрж╛ржЬ рж╕рзЗржн/lock ржХрж░рж╛рж░ рж╕ржорзЯ (code checkpoint) (git commit -m "message") |
| `git push`   | local ржХрж╛ржЬ server (GitHub/GitLab) ржП ржкрж╛ржарж╛ржирзЛрж░ рж╕ржорзЯ (git push origin branch)          |
| `git pull`   | ржЯрж┐ржоржорзЗржЯ ржирждрзБржи ржХрж╛ржЬ ржХрж░рж▓рзЗ рж╕рзЗржЯрж╛ ржирж┐ржЬрзЗрж░ рж╕рж╛ржерзЗ sync ржХрж░рж╛рж░ рж╕ржорзЯ (git pull origin branch)      |
| `git branch` | ржирждрзБржи feature/bug-fix ржПрж░ ржЬржирзНржп ржЖрж▓рж╛ржжрж╛ рж▓рж╛ржЗржи рждрзИрж░рж┐ ржХрж░рж╛рж░ рж╕ржорзЯ     |
| `git merge`  | ржЖрж▓рж╛ржжрж╛ branch ржПрж░ ржХрж╛ржЬ ржорзВрж▓ / main branch ржП ржорзЗрж╢рж╛ржирзЛрж░ рж╕ржорзЯ   |
| `git status` | ржХрзЛржи ржлрж╛ржЗрж▓ ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯрзЗржЫрзЗ ржжрзЗржЦрждрзЗ                            |
| `git log`    | ржкрзБрж░рзЛ history ржжрзЗржЦрждрзЗ                                       |
| `git revert` | ржнрзБрж▓ commit undo ржХрж░рждрзЗ                                     |
| `git stash`  | ржХрж╛ржЬ ржЕрж╕ржорзНржкрзВрж░рзНржг рж░рзЗржЦрзЗ ржЕржирзНржп ржХрж┐ржЫрзБ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ рж╕рж╛ржорзЯрж┐ржХ save ржХрж░рждрзЗ |

ЁЯФ╣ 3. ржХрзЛржерж╛рзЯ (Where Git Use ржХрж░ржмрзЛ?)

Local Machine (ржирж┐ржЬрзЗрж░ ржХржорзНржкрж┐ржЙржЯрж╛рж░) тЖТ Development ржЪрж▓ржмрзЗ (code рж▓рзЗржЦрж╛, edit ржХрж░рж╛)ред

Remote Repository (ржпрзЗржоржи GitHub, GitLab, Bitbucket) тЖТ Server ржП ржХрзЛржб рж░рж╛ржЦрж╛ рж╣ржмрзЗ (backup + team share)ред

рж▓рзЛржХрж╛рж▓ ржорзЗрж╢рж┐ржирзЗ: рждрзБржорж┐ ржХрж╛ржЬ ржХрж░ржмрзЗ, commit ржХрж░ржмрзЗред

Remote repo (GitHub/GitLab): Team ржПрж░ рж╕ржмрж╛ржЗ share ржХрж░ржмрзЗред

Production/Server deploy ржХрж░рж╛рж░ ржЖржЧрзЗ: latest code pull ржХрж░рждрзЗ рж╣ржмрзЗред

тЬЕ Git ржП commit ржХрж░рждрзЗ рж╣ржмрзЗ (Important Files)

/routes тЖТ (API routes рж░рж╛ржЦржмрзЗ)

/controllers тЖТ (business logic)

/services тЖТ (DB connection, Cloudinary service)

/views тЖТ (EJS / templates)

server.js тЖТ (entry point of project)

package.json тЖТ (рж╕ржм dependency list ржерж╛ржХржмрзЗ тАУ ржЕржирзНржп developer install ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ npm install ржжрж┐ржпрж╝рзЗ)

тЭМ Git ржП commit ржХрж░ржмрзЗ ржирж╛ (Avoid)

.gitignore ржлрж╛ржЗрж▓ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ ржпрж╛рждрзЗ ржХрж┐ржЫрзБ ржлрж╛ржЗрж▓ ржмрж╛ ржлрзЛрж▓рзНржбрж╛рж░ Git repository-рждрзЗ ржЯрзНрж░рзНржпрж╛ржХ ржирж╛ рж╣рзЯ (commit/push ржП ржирж╛ ржпрж╛рзЯ .env, node_modules/, package-lock.json)

ЁЯСЙ On GitHub repo creation screen, if you tick Add .gitignore(Node), you can choose a template (like Node, Python, Java, etc.).
Visibility: Private (if personal) / Public (if sharing)

Add README: тЬФя╕П Yes

Add .gitignore: тЬФя╕П Yes тЖТ Choose project type (Node/Python/etc.) no need VS code .gitignore file

Add license: тЬФя╕П Yes (MIT is simplest)

node_modules/

ржПржЦрж╛ржирзЗ рж╕ржм dependency ржлрж╛ржЗрж▓ ржерж╛ржХрзЗред

ржЦрзБржм ржмржбрж╝ рж╕рж╛ржЗржЬрзЗрж░ рж╣ржпрж╝, рждрж╛ржЗ Git ржП рж░рж╛ржЦрж▓рзЗ repo ржнрж╛рж░рзА рж╣ржпрж╝рзЗ ржпрж╛ржпрж╝ред

ржПрж░ ржжрж░ржХрж╛рж░ рж╣ржпрж╝ ржирж╛, ржХрж╛рж░ржг ржЕржирзНржп ржХрзЗржЙ project clone ржХрж░рж▓рзЗ тЖТ рж╢рзБржзрзБ npm install ржЪрж╛рж▓рж╛рж▓рзЗржЗ package.json ржерзЗржХрзЗ ржЖржмрж╛рж░ install рж╣ржпрж╝рзЗ ржпрж╛ржмрзЗред

.env

ржПржЦрж╛ржирзЗ sensitive data ржерж╛ржХрзЗ (DB password, API key, Cloudinary secret)ред

Public repo рждрзЗ ржЧрзЗрж▓рзЗ рж╣рзНржпрж╛ржХрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред

рждрж╛ржЗ .gitignore ржлрж╛ржЗрж▓рзЗ .env ржпрзЛржЧ ржХрж░рждрзЗ рж╣ржмрзЗред

package-lock.json

ржПржЗ ржлрж╛ржЗрж▓ auto generate рж╣ржпрж╝ ржпржЦржи npm install ржХрж░рж┐ред

Local ржП dependency lock ржХрж░рзЗ рж░рж╛ржЦрзЗред

Team ржП ржХрж╛ржЬ ржХрж░рж▓рзЗ conflict рж╣ржпрж╝ред

Professional workflow ржП team ржпржжрж┐ ржПржХржЗ dependency version maintain ржХрж░рзЗ 
рждржмрзЗ ржПржЯрж╛ржУ Git ignore ржХрж░рж╛ рж╣ржпрж╝ (ржХрж┐ржЫрзБ ржХрзЛржорзНржкрж╛ржирж┐ commit ржХрж░рзЗ, ржХрж┐ржЫрзБ ignore ржХрж░рзЗ тАУ depend ржХрж░рзЗ policy ржПрж░ ржЙржкрж░)ред


ЁЯФ╣ Local ржерзЗржХрзЗ Remote (Local тЖТ Remote)
1. git init тЖТ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗ Git ржЪрж╛рж▓рзБ

Why? ЁЯСЙ Criminal ржлрзЛрж▓рзНржбрж╛рж░рзЗ .git ржирж╛ржорзЗ hidden ржлрзЛрж▓рзНржбрж╛рж░ ржмрж╛ржирж╛рзЯред ржПржЗ .git ржлрзЛрж▓рзНржбрж╛рж░рзЗржЗ рждрзЛржорж╛рж░ ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ рж╕ржм ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЗрждрж┐рж╣рж╛рж╕ (history, commit, branch, merge ржЗрждрзНржпрж╛ржжрж┐) рж╕рзЗржн ржерж╛ржХрзЗред
ЁЯСЙ .git ржЫрж╛рзЬрж╛ Git рждрзЛржорж╛рж░ ржкрзНрж░рзЛржЬрзЗржХрзНржЯ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛ред

ржпржжрж┐ ржнрзБрж▓ржмрж╢ржд ржЖржЧрзЗ ржерзЗржХрзЗржЗ .git ржерж╛ржХрзЗ:

cd H:/workspace2/Criminal/
rm -rf .git


ЁЯСЙ ржкрзБрж░рзЛржирзЛ history ржорзБржЫрзЗ ржжрж┐рзЯрзЗ fresh ржХрж░рзЗ ржирждрзБржи Git рж╢рзБрж░рзБ ржХрж░рж╛ ржпрж╛ржмрзЗред

2. Remote Repo Connect
git remote add origin https://github.com/Papayd60/CriminalBackendProject.git


Why? ЁЯСЙ рж▓рзЛржХрж╛рж▓ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯржХрзЗ GitHub ржПрж░ рж╕рж╛ржерзЗ рж▓рж┐ржЩрзНржХ ржХрж░рждрзЗ рж╣рзЯред
ЁЯФ╣ Local = рждрзЛржорж╛рж░ PC
ЁЯФ╣ Remote = GitHub server
ЁЯСЙ connect ржХрж░рж▓рзЗ рждрзБржорж┐ local тЖТ remote (push) ржЖрж░ remote тЖТ local (pull) ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред

3. .gitignore ржмрж╛ржирж╛ржирзЛ
# dependencies
node_modules/

# environment variables
.env

# lock file
package-lock.json


Why? ЁЯСЙ ржХрж┐ржЫрзБ ржЬрж┐ржирж┐рж╕ GitHub ржП ржХржЦржирзЛ ржЖржкрж▓рзЛржб ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛:

node_modules/ тЖТ ржЕржирзЗржХ ржмрзЬ ржлрзЛрж▓рзНржбрж╛рж░, рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ржЧрзБрж▓рзЛ ржЖрж▓рж╛ржжрж╛ржнрж╛ржмрзЗ npm install ржжрж┐рзЯрзЗ ржирж╛ржорж╛ржирзЛ ржпрж╛ржмрзЗред

.env тЖТ ржЧрзЛржкржи API key, password, DB config leak рж╣рзЯрзЗ ржпрж╛ржмрзЗред

package-lock.json тЖТ рж╕рж┐рж╕рзНржЯрзЗржоржнрзЗржжрзЗ conflict рж╣рзЯ, ржжрж░ржХрж╛рж░ ржирзЗржЗ ржЯрж┐ржорзЗред

4. Stage Changes
git add .


Why? ЁЯСЙ Git ржХрзЗ ржмрж▓рж╛ рж╣рзЯ тАФ "ржПржЗ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ ржлрж╛ржЗрж▓ржЧрзБрж▓рзЛ ржЖржорж┐ next commit ржХрж░рждрзЗ ржЪрж╛ржЗ"ред
ЁЯСЙ git add . ржорж╛ржирзЗ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ рж╕ржм ржлрж╛ржЗрж▓ stage рж╣рж▓рзЛред

5. Commit Changes
git commit -m "Initial commit"


Why? ЁЯСЙ ржПржЯрж╛ рж╣рж▓рзЛ ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ checkpoint/save pointред
ЁЯСЙ ржнржмрж┐рж╖рзНржпрждрзЗ ржХрзЛржирзЛ ржнрзБрж▓ рж╣рж▓рзЗ ржПржЗ commit ржерзЗржХрзЗ project rollback ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред

6. Push to GitHub
git branch -M main   # ржпржжрж┐ branch ржирж╛ржо master рж╣рзЯ рждржмрзЗ main ржХрж░рзЗ ржжрж╛ржУ
git push origin main


Why? ЁЯСЙ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ local history GitHub server ржП ржЖржкрж▓рзЛржб рж╣рзЯрзЗ ржпрж╛ржмрзЗред
ЁЯСЙ ржЯрж┐ржорзЗрж░ рж╕ржмрж╛ржЗ ржПржЦржи ржкрзНрж░рзЛржЬрзЗржХрзНржЯ ржжрзЗржЦрждрзЗ/ржбрж╛ржЙржирж▓рзЛржб ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред



ЁЯФ╣ Remote ржерзЗржХрзЗ Local (Remote тЖТ Local)

ЁЯСЙ ржзрж░рзЛ рждрзБржорж┐ ржирждрзБржи ржорзЗрж╢рж┐ржирзЗ ржХрж╛ржЬ ржХрж░ржмрзЗ ржмрж╛ ржЯрж┐ржоржорзЗржЯ рждрзЛржорж╛рж░ ржкрзНрж░рзЛржЬрзЗржХрзНржЯ ржЪрж╛ржЗржмрзЗред

Clone ржХрж░рж╛

git clone https://github.com/Papayd60/CriminalBackendProject.git


Why? ЁЯСЙ Remote Criminal repo ржХрзЗ ржирж╛ржорж┐ржпрж╝рзЗ рж▓рзЛржХрж╛рж▓ ржХржорзНржкрж┐ржЙржЯрж╛рж░рзЗ ржЖржирждрзЗред

Remote ржПрж░ ржкрж░рж┐ржмрж░рзНрждржи ржЖржирждрзЗ

git pull origin main


Why? ЁЯСЙ ржЯрж┐ржоржорзЗржЯ ржпржжрж┐ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗ ржХрж┐ржЫрзБ ржирждрзБржи ржХрзЛржб ржпрзЛржЧ ржХрж░рзЗ тЖТ рж╕рзЗржЯрж╛ рждрзЛржорж╛рж░ рж▓рзЛржХрж╛рж▓рзЗржУ ржЖржкржбрзЗржЯ рж╣ржмрзЗред

ЁЯФ╣ ржкрзНрж░рждрж┐ржЯрж┐ Command ржПрж░ Why (ржмрж╛ржВрж▓рж╛ржпрж╝)
Command	ржХрж╛ржЬ (ржмрж╛ржВрж▓рж╛ ржмрзНржпрж╛ржЦрзНржпрж╛)	Why (ржХрзЗржи ржжрж░ржХрж╛рж░)
git init	рж▓рзЛржХрж╛рж▓ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗ ржкрзНрж░ржержоржмрж╛рж░ Git ржЪрж╛рж▓рзБ ржХрж░рждрзЗ	Git ржлрж╛ржЗрж▓ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рж╛ рж╢рзБрж░рзБ ржХрж░рждрзЗ
git clone	Remote Criminal repo рж▓рзЛржХрж╛рж▓рзЗ ржирж╛ржорж╛рждрзЗ	ржЯрж┐ржо/ржЕржирзНржп ржорзЗрж╢рж┐ржирзЗ ржкрзНрж░рзЛржЬрзЗржХрзНржЯ ржкрзЗрждрзЗ
git add .	Criminal ржПрж░ рж╕ржм ржлрж╛ржЗрж▓ stage ржХрж░рждрзЗ	ржХрзЛржи ржлрж╛ржЗрж▓ commit рж╣ржмрзЗ рж╕рзЗржЯрж╛ ржарж┐ржХ ржХрж░рждрзЗ
git commit -m "msg"	Local checkpoint ржмрж╛ржирж╛рждрзЗ	Criminal ржХрзЛржбрзЗрж░ history save ржХрж░рждрзЗ
git push origin main	Local Criminal тЖТ Remote ржкрж╛ржарж╛рждрзЗ	ржХрзЛржб ржЯрж┐ржо/рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ рж╕рж╛ржерзЗ share ржХрж░рждрзЗ
git pull origin main	Remote Criminal тЖТ Local sync ржХрж░рждрзЗ	ржЕржирзНржпржжрзЗрж░ ржХрзЛржб рж▓рзЛржХрж╛рж▓рзЗ ржЖржкржбрзЗржЯ ржкрзЗрждрзЗ
git branch	Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ branch рж▓рж┐рж╕рзНржЯ ржжрзЗржЦрждрзЗ	ржПржХрж╕рж╛ржерзЗ ржПржХрж╛ржзрж┐ржХ feature/manage ржХрж░рждрзЗ
git checkout -b new-branch	ржирждрзБржи Criminal feature ржПрж░ ржЬржирзНржп branch ржмрж╛ржирж╛рждрзЗ	main code safe рж░рзЗржЦрзЗ ржЖрж▓рж╛ржжрж╛ feature ржмрж╛ржирж╛рждрзЗ
git switch new-branch ржпржжрж┐ ржЖржмрж╛рж░ manually move ржХрж░рждрзЗ ржЪрж╛ржи
git merge branchname	Branch ржПрж░ ржХрж╛ржЬ Criminal main ржП ржорзЗрж╢рж╛рждрзЗ	feature рж╢рзЗрж╖ рж╣рж▓рзЗ ржорзВрж▓ ржХрзЛржбрзЗ ржпрзЛржЧ ржХрж░рждрзЗ
git status	Criminal ржП ржХрзЛржи ржлрж╛ржЗрж▓ ржкрж░рж┐ржмрж░рзНрждрж┐ржд рж╣ржпрж╝рзЗржЫрзЗ ржжрзЗржЦрждрзЗ	ржХрзЛржи ржХрж╛ржЬ ржПржЦржирзЛ commit рж╣ржпрж╝ржирж┐ ржмрзБржЭрждрзЗ
git log	Criminal ржПрж░ рж╕ржм commit history ржжрзЗржЦрждрзЗ	ржХрзЗ ржХржЦржи ржХрзА ржХрж░рзЗржЫрзЗ track ржХрж░рждрзЗ
git stash	Criminal ржП ржХрж╛ржЬ рж╕рж╛ржоржпрж╝рж┐ржХ save ржХрж░рзЗ ржЕржирзНржп ржХрж┐ржЫрзБ ржХрж░рждрзЗ	ржХрж╛ржЬ ржЕрж░рзНржзрзЗржХ рж╢рзЗрж╖ рж╣рж▓рзЗ temporary рж╕рзЗржн рж░рж╛ржЦрждрзЗ

ЁЯСЙ ржПржЦржи Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ Local тЖФ Remote flow ржПржХржжржо clear:

Local тЖТ Remote тЖТ add тЖТ commit тЖТ push

Remote тЖТ Local тЖТ clone / pull


ЁЯФ╣ Pull Request ржХрзА?

Pull Request (PR) рж╣ржЪрзНржЫрзЗ ржПржХржЯрж╛ ржЕржирзБрж░рзЛржз (Request) GitHub/GitLab/Bitbucket ржП, ржпрзЗржЦрж╛ржирзЗ рждрзБржорж┐ рждрзЛржорж╛рж░ ржХрзЛржбрзЗрж░ ржкрж░рж┐ржмрж░рзНрждржи (changes/commits) ржЕржирзНржп ржХрж╛рж░ржУ ржмрзНрж░рж╛ржЮрзНржЪрзЗ merge ржХрж░рж╛рж░ ржЕржирзБржорждрж┐ ржЪрж╛ржЗржЫрзЛред

ЁЯСЙ рж╕рж╛ржзрж╛рж░ржгржд ржПржЯрж╛ рж╣рзЯ ржпржЦржи ржЕржирзЗржХржЬржи ржПржХрж╕рж╛ржерзЗ ржХрзЛржирзЛ ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗ ржХрж╛ржЬ ржХрж░рзЗред
ЁЯСЙ рждрзБржорж┐ ржирждрзБржи ржХрзЛржирзЛ ржлрж┐ржЪрж╛рж░/ржмрж╛ржЧ ржлрж┐ржХрзНрж╕ ржХрж░рзЗ ржлрзЗрж▓рзЗржЫрзЛ, ржПржЦржи рж╕рзЗржЯрж╛ main/master ржмрзНрж░рж╛ржЮрзНржЪрзЗ ржЖржирждрзЗ ржЪрж╛ржЗржЫрзЛред

ЁЯФ╣ Pull Request ржПрж░ ржзрж╛ржк (Step by Step)

рждрзБржорж┐ ржЖрж▓рж╛ржжрж╛ ржПржХржЯрж╛ ржмрзНрж░рж╛ржЮрзНржЪрзЗ ржХрж╛ржЬ ржХрж░ржмрзЗ (ржпрзЗржоржи feature-login)ред

ржХрж╛ржЬ рж╢рзЗрж╖ рж╣рж▓рзЗ рждрзБржорж┐ main ржмрзНрж░рж╛ржЮрзНржЪрзЗ merge ржХрж░рж╛рж░ ржЬржирзНржп Pull Request ржУржкрзЗржи ржХрж░ржмрзЗред

ржЯрж┐ржо ржорзЗржорзНржмрж╛рж░рж░рж╛ рж░рж┐ржнрж┐ржЙ ржХрж░ржмрзЗ, ржХржорзЗржирзНржЯ ржХрж░ржмрзЗ, ржжрж░ржХрж╛рж░ рж╣рж▓рзЗ ржЖржмрж╛рж░ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░ржмрзЗред

рж░рж┐ржнрж┐ржЙ рж╢рзЗрж╖ рж╣рж▓рзЗ merge ржХрж░рж╛ рж╣ржмрзЗред

ЁЯФ╣ Two-way Pull Request (2 ржжрж┐ржХрзЗрж░ Pull Request)

ржПржЯрж╛рж░ ржорж╛ржирзЗ рж╣рждрзЗ ржкрж╛рж░рзЗ ржжрзБржЗржнрж╛ржмрзЗ PR ржХрж░рж╛ ржпрж╛рзЯ тмЗя╕П

тЬЕ рзз) Fork ржерзЗржХрзЗ Pull Request

рждрзБржорж┐ ржХрж╛рж░ржУ ржкрзНрж░рзЛржЬрзЗржХрзНржЯ fork ржХрж░рж▓рзЗ,

ржирж┐ржЬрзЗрж░ fork ржХрж░рж╛ repo рждрзЗ ржХрж╛ржЬ ржХрж░рж▓рзЗ,

рждрж╛рж░ржкрж░ ржорзВрж▓ repo рждрзЗ (upstream repo) PR ржкрж╛ржарж╛ржмрзЗред

ЁЯСЙ ржПржХрзЗ ржмрж▓рзЗ External Contribution PRред

тЬЕ рзи) Same Repository ржПрж░ ржнрзЗрждрж░рзЗ Pull Request

ржПржХржЗ repo ржПрж░ ржоржзрзНржпрзЗ рждрзБржорж┐ feature-branch ржерзЗржХрзЗ main ржП PR ржХрж░ржмрзЗред

ржПржЯрж╛ рж╕рж╛ржзрж╛рж░ржгржд ржЯрж┐ржо ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗ рж╣рзЯред

ЁЯСЙ ржПржХрзЗ ржмрж▓рзЗ Internal PRред

ЁЯФ╣ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржмрж╛ржВрж▓рж╛ ржЙржжрж╛рж╣рж░ржг

ржзрж░рзЛ рждрзЛржорж╛рж░ ржЯрж┐ржоржорзЗржЯ Rahul main repo рждрзЗ ржХрж╛ржЬ ржХрж░ржЫрзЗред

рждрзБржорж┐ feature-login ржмрзНрж░рж╛ржЮрзНржЪрзЗ ржХрж╛ржЬ ржХрж░ржЫрзЛред

ЁЯСЙ рзиржнрж╛ржмрзЗ PR рж╣рждрзЗ ржкрж╛рж░рзЗ:

Same repo PR тЖТ feature-login тЖТ merge тЖТ main (internal)

Forked repo PR тЖТ рждрзЛржорж╛рж░ fork тЖТ merge тЖТ Rahul ржПрж░ main repo (external)

ЁЯФ╣ Git ржП File Tracking System
рзз) Untracked File

ржирждрзБржи ржлрж╛ржЗрж▓ ржмрж╛ржирж╛рж▓рзЗ Git ржЬрж╛ржирзЗ ржирж╛ рж╕рзЗржЯрж╛ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░ржмрзЗ ржХрж┐ржирж╛ред

Example:

git status


тЮбя╕П ржжрзЗржЦрж╛ржмрзЗ Untracked files

ЁЯСЙ Solution тЖТ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ:

git add filename

рзи) Tracked File (Staged/Committed)

ржПржХржмрж╛рж░ git add ржжрж┐рж▓рзЗ Git ржУржЗ ржлрж╛ржЗрж▓ржХрзЗ track ржХрж░ржмрзЗред

ржПрж░ржкрж░ ржпржжрж┐ ржирждрзБржи edit ржирж╛ ржерж╛ржХрзЗ тЖТ status ржП clean ржжрзЗржЦрж╛ржмрзЗред

рзй) Modified File

ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рж╛ ржлрж╛ржЗрж▓ edit ржХрж░рж▓рзЗ рж╕рзЗржЯрж╛ Modified рж╣ржмрзЗред

git status


тЮбя╕П ржжрзЗржЦрж╛ржмрзЗ modified: filename

ЁЯСЙ ржЖржмрж╛рж░ stage ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ:

git add filename

ЁЯФ╣ Merge Conflict ржХржмрзЗ рж╣рзЯ?

ЁЯСЙ ржзрж░рзЛ main branch ржП ржПржХржЯрж┐ рж▓рж╛ржЗржи ржЖржЫрзЗ:

const name = "Rahim";


рждрзБржорж┐ feature branch ржП рж╕рзЗржЯрж╛ржХрзЗ ржмржжрж▓рж╛рж▓рзЗ:

const name = "Karim";


ржПржмржВ ржЯрж┐ржоржорзЗржЯ main branch ржП ржПржХржЗ рж▓рж╛ржЗржи ржмржжрж▓рж╛рж▓рзЛ:

const name = "Hasan";


тЮбя╕П ржПржЦржи рждрзБржорж┐ ржпржЦржи feature ржХрзЗ main ржП merge ржХрж░ржмрзЗ тЖТ Git ржмрзБржЭржмрзЗ ржирж╛ ржХрзЛржиржЯрж╛ рж░рж╛ржЦржмрзЗред
ржПржЯрж╛ржЗ merge conflictред

Conflict ржХрж┐ржнрж╛ржмрзЗ ржЪрзЗржирж╛ ржпрж╛ржмрзЗ?
git merge feature


тЮбя╕П ржжрзЗржЦрж╛ржмрзЗ CONFLICT messageред
тЮбя╕П Code ржлрж╛ржЗрж▓рзЗ conflict ржПрж░ ржЬрж╛рзЯржЧрж╛рзЯ ржПржоржи рж▓рж╛ржЗржи ржЖрж╕ржмрзЗ:

<<<<<<< HEAD
const name = "Hasan";
=======
const name = "Karim";
>>>>>>> feature

Conflict Fix ржХрж░рж╛рж░ ржзрж╛ржк

ржлрж╛ржЗрж▓ ржЦрзБрж▓рзЗ ржарж┐ржХ ржХрж░рзЛ ржХрзЛржи ржХрзЛржб ржарж┐ржХред

const name = "Karim";   // final decision ржорж╛ржирзЗ feature branch-ржПрж░ ржХрзЛржб рж╕ржарж┐ржХ тЬЕ

What to do now?

ржЖржЧрзЗ ржирж┐рж╢рзНржЪрж┐ржд рж╣ржУ рждрзБржорж┐ feature/new-branch ржП ржЖржЫрзЛ:

git checkout feature/new-branch


main ржПрж░ рж╕рж╛ржерзЗ ржорж░рзНржЬ ржХрж░рзЛ (рждрж╛рж╣рж▓рзЗ Karim code main ржП ржпрж╛ржмрзЗ):

git checkout main
git merge feature/new-branch


ржПржЦржи main branch ржП code рж╣ржмрзЗ:

const name = "Karim";   // final decision

Stage ржХрж░рзЛ:

git add filename


Merge рж╕ржорзНржкрзВрж░рзНржг ржХрж░рзЛ:

git commit

ЁЯФ╣ ржпржжрж┐ Current Code ржнрзБрж▓ рж╣рзЯ тЖТ ржХрж┐ржнрж╛ржмрзЗ Fix ржХрж░ржмрзЗ?

рж╢рзЗрж╖ commit undo ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ:

git reset --soft HEAD~1


ЁЯСЙ Commit cancel рж╣ржмрзЗ ржХрж┐ржирзНрждрзБ code safe ржерж╛ржХржмрзЗред

ржкрзБрж░рзЛржкрзБрж░рж┐ code ржУ commit ржлрзЗрж▓рзЗ ржжрж┐рждрзЗ ржЪрж╛ржЗрж▓рзЗ:

git reset --hard HEAD~1


ЁЯСЙ ржПржХ ржзрж╛ржк ржкрж┐ржЫржирзЗ ржЪрж▓рзЗ ржпрж╛ржмрзЗред

ЁЯФ╣ Commit History ржХрж┐ржнрж╛ржмрзЗ ржжрзЗржЦржмрзЗ?
git log


тЮбя╕П commit ID, author, date рж╕ржм ржжрзЗржЦрж╛ржмрзЗред

ЁЯСЙ рж╢рзБржзрзБ short log ржжрзЗржЦрждрзЗ ржЪрж╛ржЗрж▓рзЗ:

git log --oneline
