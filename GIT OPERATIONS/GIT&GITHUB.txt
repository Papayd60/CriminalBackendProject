ЁЯФ╣ 1. ржХрзЗржи (Why Git ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЛ?)

ржЖржорж╛ржжрзЗрж░ ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ version control рж░рж╛ржЦрж╛рж░ ржЬржирзНржп (ржХрзЗ ржХржмрзЗ ржХрзЛржи ржХрзЛржб рж▓рж┐ржЦрзЗржЫрзЗ / ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗржЫрзЗ)ред

Team ржП ржХрж╛ржЬ ржХрж░рж▓рзЗ collaboration ржХрж░рж╛рж░ ржЬржирзНржпред

ржнрзБрж▓ рж╣рж▓рзЗ ржЖржЧрзЗрж░ version ржП ржлрж┐рж░рзЗ ржпрж╛ржУржпрж╝рж╛рж░ ржЬржирзНржпред

Professional ржХрж╛ржЬрзЗрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ code history ржкрзНрж░ржорж╛ржг рж╣рж┐рж╕рж╛ржмрзЗ ржжрж░ржХрж╛рж░ рж╣ржпрж╝ред

ЁЯФ╣ 2. ржХржЦржи (When Git Operation ржХрж░ржмрзЛ?)

| ржХрж╛ржЬ          | ржХржЦржи ржХрж░рждрзЗ рж╣ржмрзЗ                                             |
| ------------ | -------------------------------------------------------- |
| `git init`   | ржПржХржжржо ржирждрзБржи project рждрзИрж░рж┐ ржХрж░рж╛рж░ рж╕ржорзЯ                          |
| `git clone`  | ржЕржирзНржпрзЗрж░ project ржирж┐ржЬрзЗрж░ ржХржорзНржкрж┐ржЙржЯрж╛рж░рзЗ ржирж╛ржорж╛ржирзЛрж░ рж╕ржорзЯ              |
| `git add`    | ржлрж╛ржЗрж▓ edit ржмрж╛ ржирждрзБржи ржлрж╛ржЗрж▓ create ржХрж░рж╛рж░ ржкрж░                    |
| `git commit` | ржХрж╛ржЬ рж╕рзЗржн/lock ржХрж░рж╛рж░ рж╕ржорзЯ (code checkpoint) (git commit -m "message") |
| `git push`   | local ржХрж╛ржЬ server (GitHub/GitLab) ржП ржкрж╛ржарж╛ржирзЛрж░ рж╕ржорзЯ (git push origin branch)          |
| `git pull`   | ржЯрж┐ржоржорзЗржЯ ржирждрзБржи ржХрж╛ржЬ ржХрж░рж▓рзЗ рж╕рзЗржЯрж╛ ржирж┐ржЬрзЗрж░ рж╕рж╛ржерзЗ sync ржХрж░рж╛рж░ рж╕ржорзЯ (git pull origin branch)      |
| `git branch` | ржирждрзБржи feature/bug-fix ржПрж░ ржЬржирзНржп ржЖрж▓рж╛ржжрж╛ рж▓рж╛ржЗржи рждрзИрж░рж┐ ржХрж░рж╛рж░ рж╕ржорзЯ     |
| `git merge`  | ржЖрж▓рж╛ржжрж╛ branch ржПрж░ ржХрж╛ржЬ ржорзВрж▓ / main branch ржП ржорзЗрж╢рж╛ржирзЛрж░ рж╕ржорзЯ   |
| `git status` | ржХрзЛржи ржлрж╛ржЗрж▓ ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯрзЗржЫрзЗ ржжрзЗржЦрждрзЗ                            |
| `git log`    | ржкрзБрж░рзЛ history ржжрзЗржЦрждрзЗ                                       |
| `git revert` | ржнрзБрж▓ commit undo ржХрж░рждрзЗ                                     |
| `git stash`  | ржХрж╛ржЬ ржЕрж╕ржорзНржкрзВрж░рзНржг рж░рзЗржЦрзЗ ржЕржирзНржп ржХрж┐ржЫрзБ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ рж╕рж╛ржорзЯрж┐ржХ save ржХрж░рждрзЗ |

ЁЯФ╣ 3. ржХрзЛржерж╛рзЯ (Where Git Use ржХрж░ржмрзЛ?)

Local Machine (ржирж┐ржЬрзЗрж░ ржХржорзНржкрж┐ржЙржЯрж╛рж░) тЖТ Development ржЪрж▓ржмрзЗ (code рж▓рзЗржЦрж╛, edit ржХрж░рж╛)ред

Remote Repository (ржпрзЗржоржи GitHub, GitLab, Bitbucket) тЖТ Server ржП ржХрзЛржб рж░рж╛ржЦрж╛ рж╣ржмрзЗ (backup + team share)ред

рж▓рзЛржХрж╛рж▓ ржорзЗрж╢рж┐ржирзЗ: рждрзБржорж┐ ржХрж╛ржЬ ржХрж░ржмрзЗ, commit ржХрж░ржмрзЗред

Remote repo (GitHub/GitLab): Team ржПрж░ рж╕ржмрж╛ржЗ share ржХрж░ржмрзЗред

Production/Server deploy ржХрж░рж╛рж░ ржЖржЧрзЗ: latest code pull ржХрж░рждрзЗ рж╣ржмрзЗред

тЬЕ Git ржП commit ржХрж░рждрзЗ рж╣ржмрзЗ (Important Files)

/routes тЖТ (API routes рж░рж╛ржЦржмрзЗ)

/controllers тЖТ (business logic)

/services тЖТ (DB connection, Cloudinary service)

/views тЖТ (EJS / templates)

server.js тЖТ (entry point of project)

package.json тЖТ (рж╕ржм dependency list ржерж╛ржХржмрзЗ тАУ ржЕржирзНржп developer install ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ npm install ржжрж┐ржпрж╝рзЗ)

тЭМ Git ржП commit ржХрж░ржмрзЗ ржирж╛ (Avoid)

.gitignore ржлрж╛ржЗрж▓ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ ржпрж╛рждрзЗ ржХрж┐ржЫрзБ ржлрж╛ржЗрж▓ ржмрж╛ ржлрзЛрж▓рзНржбрж╛рж░ Git repository-рждрзЗ ржЯрзНрж░рзНржпрж╛ржХ ржирж╛ рж╣рзЯ (commit/push ржП ржирж╛ ржпрж╛рзЯ .env, node_modules/, package-lock.json)

ЁЯСЙ On GitHub repo creation screen, if you tick Add .gitignore(Node), you can choose a template (like Node, Python, Java, etc.).
Visibility: Private (if personal) / Public (if sharing)

Add README: тЬФя╕П Yes

Add .gitignore: тЬФя╕П Yes тЖТ Choose project type (Node/Python/etc.) no need VS code .gitignore file

Add license: тЬФя╕П Yes (MIT is simplest)

node_modules/

ржПржЦрж╛ржирзЗ рж╕ржм dependency ржлрж╛ржЗрж▓ ржерж╛ржХрзЗред

ржЦрзБржм ржмржбрж╝ рж╕рж╛ржЗржЬрзЗрж░ рж╣ржпрж╝, рждрж╛ржЗ Git ржП рж░рж╛ржЦрж▓рзЗ repo ржнрж╛рж░рзА рж╣ржпрж╝рзЗ ржпрж╛ржпрж╝ред

ржПрж░ ржжрж░ржХрж╛рж░ рж╣ржпрж╝ ржирж╛, ржХрж╛рж░ржг ржЕржирзНржп ржХрзЗржЙ project clone ржХрж░рж▓рзЗ тЖТ рж╢рзБржзрзБ npm install ржЪрж╛рж▓рж╛рж▓рзЗржЗ package.json ржерзЗржХрзЗ ржЖржмрж╛рж░ install рж╣ржпрж╝рзЗ ржпрж╛ржмрзЗред

.env

ржПржЦрж╛ржирзЗ sensitive data ржерж╛ржХрзЗ (DB password, API key, Cloudinary secret)ред

Public repo рждрзЗ ржЧрзЗрж▓рзЗ рж╣рзНржпрж╛ржХрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред

рждрж╛ржЗ .gitignore ржлрж╛ржЗрж▓рзЗ .env ржпрзЛржЧ ржХрж░рждрзЗ рж╣ржмрзЗред

package-lock.json

ржПржЗ ржлрж╛ржЗрж▓ auto generate рж╣ржпрж╝ ржпржЦржи npm install ржХрж░рж┐ред

Local ржП dependency lock ржХрж░рзЗ рж░рж╛ржЦрзЗред

Team ржП ржХрж╛ржЬ ржХрж░рж▓рзЗ conflict рж╣ржпрж╝ред

Professional workflow ржП team ржпржжрж┐ ржПржХржЗ dependency version maintain ржХрж░рзЗ 
рждржмрзЗ ржПржЯрж╛ржУ Git ignore ржХрж░рж╛ рж╣ржпрж╝ (ржХрж┐ржЫрзБ ржХрзЛржорзНржкрж╛ржирж┐ commit ржХрж░рзЗ, ржХрж┐ржЫрзБ ignore ржХрж░рзЗ тАУ depend ржХрж░рзЗ policy ржПрж░ ржЙржкрж░)ред


ЁЯФ╣ Local ржерзЗржХрзЗ Remote (Local тЖТ Remote)

ЁЯФ╣ Criminal Project Git Flow
1. Git Init
git init

.git ржлрзЛрж▓рзНржбрж╛рж░ржЯрж╛ржЗ delete ржХрж░рждрзЗ (If .git exist)
cd H:/workspace2/Criminal/ 
rm -rf .git

ЁЯСЙ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗ Git ржЪрж╛рж▓рзБ ржХрж░рзЛ

2. Remote Repo Connect
git remote add origin https://github.com/Papayd60/CriminalBackendProject.git


ЁЯСЙ рж▓рзЛржХрж╛рж▓ ржкрзНрж░рзЛржЬрзЗржХрзНржЯржХрзЗ GitHub Repo ржПрж░ рж╕рж╛ржерзЗ connect

3. .gitignore ржмрж╛ржирж╛ржУ (рж╕ржмржЪрзЗрзЯрзЗ ржЬрж░рзБрж░рж┐)

Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ root ржП .gitignore ржлрж╛ржЗрж▓ рждрзИрж░рж┐ ржХрж░рзЛ ЁЯСЗ

# dependencies
node_modules/

# environment variables
.env

# lock file
package-lock.json


ЁЯСЙ ржПрж░ ржорж╛ржирзЗ ржПржЗ ржлрж╛ржЗрж▓ржЧрзБрж▓рзЛ GitHub ржП push рж╣ржмрзЗ ржирж╛

4. Stage Changes
git add .


ЁЯСЙ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ рж╕ржм ржлрж╛ржЗрж▓ (except .gitignore ржП ржерж╛ржХрж╛ ржлрж╛ржЗрж▓ржЧрзБрж▓рзЛ) stage ржХрж░рж╛ рж╣ржмрзЗ

5. Commit Changes
git commit -m "Initial commit"


ЁЯСЙ рж▓рзЛржХрж╛рж▓ history рждрзЗ checkpoint рждрзИрж░рж┐

6. Push to GitHub
git branch -M main   # ржпржжрж┐ main ржирж╛ ржерж╛ржХрзЗ, master ржерж╛ржХрзЗ
git push origin main


ЁЯСЙ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯ GitHub ржП ржЖржкрж▓рзЛржб рж╣ржмрзЗ

7. ржЕржирзНржп PC/ржЯрж┐ржоржорзЗржЯ ржирж╛ржорж╛ржирзЛрж░ рж╕ржорзЯ
git clone https://github.com/Papayd60/CriminalBackendProject.git
cd CriminalBackendProject
npm install


ЁЯСЙ ржПржЦрж╛ржирзЗ npm install ржжрж┐рж▓рзЗ node_modules ржЖржмрж╛рж░ рж▓рзЛржХрж╛рж▓рж┐ рждрзИрж░рж┐ рж╣ржмрзЗ
ЁЯСЙ .env ржлрж╛ржЗрж▓ ржЯрж┐ржоржорзЗржЯржжрзЗрж░ ржорзНржпрж╛ржирзБрзЯрж╛рж▓рж┐ рж╢рзЗрзЯрж╛рж░ ржХрж░рждрзЗ рж╣ржмрзЗ (GitHub ржП ржирзЗржЗ, private рж░рж╛ржЦрждрзЗ рж╣ржмрзЗ)


Why? ЁЯСЙ Local Criminal project ржПржЦржи GitHub ржП ржЪрж▓рзЗ ржпрж╛ржмрзЗред ржЯрж┐ржоржорзЗржЯ ржмрж╛ ржЕржирзНржп ржорзЗрж╢рж┐ржи ржерзЗржХрзЗржУ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрж░рж╛ ржпрж╛ржмрзЗред

ЁЯФ╣ Remote ржерзЗржХрзЗ Local (Remote тЖТ Local)

ЁЯСЙ ржзрж░рзЛ рждрзБржорж┐ ржирждрзБржи ржорзЗрж╢рж┐ржирзЗ ржХрж╛ржЬ ржХрж░ржмрзЗ ржмрж╛ ржЯрж┐ржоржорзЗржЯ рждрзЛржорж╛рж░ ржкрзНрж░рзЛржЬрзЗржХрзНржЯ ржЪрж╛ржЗржмрзЗред

Clone ржХрж░рж╛

git clone https://github.com/username/criminal-app.git


Why? ЁЯСЙ Remote Criminal repo ржХрзЗ ржирж╛ржорж┐ржпрж╝рзЗ рж▓рзЛржХрж╛рж▓ ржХржорзНржкрж┐ржЙржЯрж╛рж░рзЗ ржЖржирждрзЗред

Remote ржПрж░ ржкрж░рж┐ржмрж░рзНрждржи ржЖржирждрзЗ

git pull origin main


Why? ЁЯСЙ ржЯрж┐ржоржорзЗржЯ ржпржжрж┐ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗ ржХрж┐ржЫрзБ ржирждрзБржи ржХрзЛржб ржпрзЛржЧ ржХрж░рзЗ тЖТ рж╕рзЗржЯрж╛ рждрзЛржорж╛рж░ рж▓рзЛржХрж╛рж▓рзЗржУ ржЖржкржбрзЗржЯ рж╣ржмрзЗред

ЁЯФ╣ ржкрзНрж░рждрж┐ржЯрж┐ Command ржПрж░ Why (ржмрж╛ржВрж▓рж╛ржпрж╝)
Command	ржХрж╛ржЬ (ржмрж╛ржВрж▓рж╛ ржмрзНржпрж╛ржЦрзНржпрж╛)	Why (ржХрзЗржи ржжрж░ржХрж╛рж░)
git init	рж▓рзЛржХрж╛рж▓ Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗ ржкрзНрж░ржержоржмрж╛рж░ Git ржЪрж╛рж▓рзБ ржХрж░рждрзЗ	Git ржлрж╛ржЗрж▓ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рж╛ рж╢рзБрж░рзБ ржХрж░рждрзЗ
git clone	Remote Criminal repo рж▓рзЛржХрж╛рж▓рзЗ ржирж╛ржорж╛рждрзЗ	ржЯрж┐ржо/ржЕржирзНржп ржорзЗрж╢рж┐ржирзЗ ржкрзНрж░рзЛржЬрзЗржХрзНржЯ ржкрзЗрждрзЗ
git add .	Criminal ржПрж░ рж╕ржм ржлрж╛ржЗрж▓ stage ржХрж░рждрзЗ	ржХрзЛржи ржлрж╛ржЗрж▓ commit рж╣ржмрзЗ рж╕рзЗржЯрж╛ ржарж┐ржХ ржХрж░рждрзЗ
git commit -m "msg"	Local checkpoint ржмрж╛ржирж╛рждрзЗ	Criminal ржХрзЛржбрзЗрж░ history save ржХрж░рждрзЗ
git push origin main	Local Criminal тЖТ Remote ржкрж╛ржарж╛рждрзЗ	ржХрзЛржб ржЯрж┐ржо/рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ рж╕рж╛ржерзЗ share ржХрж░рждрзЗ
git pull origin main	Remote Criminal тЖТ Local sync ржХрж░рждрзЗ	ржЕржирзНржпржжрзЗрж░ ржХрзЛржб рж▓рзЛржХрж╛рж▓рзЗ ржЖржкржбрзЗржЯ ржкрзЗрждрзЗ
git branch	Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ branch рж▓рж┐рж╕рзНржЯ ржжрзЗржЦрждрзЗ	ржПржХрж╕рж╛ржерзЗ ржПржХрж╛ржзрж┐ржХ feature/manage ржХрж░рждрзЗ
git checkout -b new-branch	ржирждрзБржи Criminal feature ржПрж░ ржЬржирзНржп branch ржмрж╛ржирж╛рждрзЗ	main code safe рж░рзЗржЦрзЗ ржЖрж▓рж╛ржжрж╛ feature ржмрж╛ржирж╛рждрзЗ
git merge branchname	Branch ржПрж░ ржХрж╛ржЬ Criminal main ржП ржорзЗрж╢рж╛рждрзЗ	feature рж╢рзЗрж╖ рж╣рж▓рзЗ ржорзВрж▓ ржХрзЛржбрзЗ ржпрзЛржЧ ржХрж░рждрзЗ
git status	Criminal ржП ржХрзЛржи ржлрж╛ржЗрж▓ ржкрж░рж┐ржмрж░рзНрждрж┐ржд рж╣ржпрж╝рзЗржЫрзЗ ржжрзЗржЦрждрзЗ	ржХрзЛржи ржХрж╛ржЬ ржПржЦржирзЛ commit рж╣ржпрж╝ржирж┐ ржмрзБржЭрждрзЗ
git log	Criminal ржПрж░ рж╕ржм commit history ржжрзЗржЦрждрзЗ	ржХрзЗ ржХржЦржи ржХрзА ржХрж░рзЗржЫрзЗ track ржХрж░рждрзЗ
git stash	Criminal ржП ржХрж╛ржЬ рж╕рж╛ржоржпрж╝рж┐ржХ save ржХрж░рзЗ ржЕржирзНржп ржХрж┐ржЫрзБ ржХрж░рждрзЗ	ржХрж╛ржЬ ржЕрж░рзНржзрзЗржХ рж╢рзЗрж╖ рж╣рж▓рзЗ temporary рж╕рзЗржн рж░рж╛ржЦрждрзЗ

ЁЯСЙ ржПржЦржи Criminal ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗрж░ Local тЖФ Remote flow ржПржХржжржо clear:

Local тЖТ Remote тЖТ add тЖТ commit тЖТ push

Remote тЖТ Local тЖТ clone / pull
