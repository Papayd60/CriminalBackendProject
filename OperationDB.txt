1Ô∏è‚É£ Stored Procedure(SP)
Simple meaning ‚Üí
‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá ‡¶Ü‡¶ó‡ßá‡¶á ‡¶ï‡¶ø‡¶õ‡ßÅ SQL ‡¶ï‡ßã‡¶° ‡¶∏‡ßç‡¶ü‡ßã‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡ßü, ‡¶Ø‡ßá‡¶® ‡¶¨‡¶æ‡¶∞‡¶¨‡¶æ‡¶∞ ‡¶ì‡¶á ‡¶ï‡ßã‡¶° ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶®‡¶æ ‡¶π‡ßü, ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶®‡¶æ‡¶Æ ‡¶°‡ßá‡¶ï‡ßá ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã ‡¶Ø‡¶æ‡ßü‡•§
‡¶è‡¶ü‡¶æ ‡¶Ö‡¶®‡ßá‡¶ï‡¶ü‡¶æ ‚Äúrecipe book‚Äù ‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã ‚Äî ‡¶∞‡¶æ‡¶®‡ßç‡¶®‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶®‡¶ø‡ßü‡¶Æ ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶∞‡¶æ‡¶ñ‡¶≤‡ßá, ‡¶™‡¶∞‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶®‡¶æ‡¶Æ ‡¶¨‡¶≤‡¶≤‡ßá‡¶á ‡¶π‡¶¨‡ßá‡•§

-- Example of dropping the old and creating the new procedure.
-- Note: Replace the procedure body with your actual code.

DROP PROCEDURE IF EXISTS sp_criminal_info_update;
GO

CREATE PROCEDURE sp_criminal_info_update_new

‡¶ï‡ßá‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßã Node API ‡¶§‡ßá ?

    ‡¶¨‡¶æ‡¶∞‡¶¨‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ø SQL ‡¶ï‡ßã‡¶° ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶®‡¶æ ‡¶π‡ßü

‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶≠‡¶æ‡¶≤‡ßã ‡¶π‡ßü(DB server ‡¶Ö‡¶™‡ßç‡¶ü‡¶ø‡¶Æ‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡ßá)

‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ ‡¶¨‡¶¶‡¶≤‡¶æ‡¶≤‡ßá ‡¶∏‡¶¨ API ‡¶§‡ßá ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡ßü

Deadlock ‡¶¨‡¶æ Lost connection ‡¶π‡¶≤‡ßá: SHOW PROCESSLIST; ‡¶ö‡¶æ‡¶≤‡¶ø‡¶Ø‡¶º‡ßá ‡¶ö‡¶≤‡¶Æ‡¶æ‡¶® ‡¶ï‡ßÅ‡ßü‡ßá‡¶∞‡¶ø ‡¶¶‡ßá‡¶ñ‡ßã, ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶ï‡ßÅ‡ßü‡ßá‡¶∞‡¶ø‡¶∞ Id ‡¶®‡¶ø‡ßü‡ßá KILL Id; ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡ßá‡¶á ‡¶ï‡ßÅ‡ßü‡ßá‡¶∞‡¶ø‡¶ü‡¶æ ‡¶¨‡¶®‡ßç‡¶ß 

‡¶á‡¶Æ‡ßã‡¶ú‡¶ø ‡¶∞‡¶æ‡¶ñ‡¶§‡ßá ‡¶ö‡¶æ‡¶ì, ‡¶§‡¶æ‡¶π‡¶≤‡ßá:
ALTER DATABASE mydatabase CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;

ALTER TABLE your_table_name CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

----Insert Data to police_station & invstregistrationregistration_logs

// 1. Stored Procedure (SP) ‚Äî ‡¶∂‡ßÅ‡¶ß‡ßÅ police_station ‡¶è ‡¶°‡¶æ‡¶ü‡¶æ ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá, ‡¶≤‡¶ó ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‡¶®‡¶æ‡•§
DELIMITER $$

CREATE PROCEDURE register_police(
    IN p_officer_name VARCHAR(100), --‡¶Ö‡¶´‡¶ø‡¶∏‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ
    IN p_branch_name  VARCHAR(50), --‡¶¨‡ßç‡¶∞‡¶æ‡¶û‡ßç‡¶ö‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ
    IN p_district     VARCHAR(50), --‡¶ú‡ßá‡¶≤‡¶æ
    IN p_password     VARCHAR(255)-- ‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶°(hashed)
)
BEGIN
    DECLARE v_police_id VARCHAR(50); --‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü‡ßá‡¶° ‡¶™‡ßÅ‡¶≤‡¶ø‡¶∂ ‡¶Ü‡¶á‡¶°‡¶ø
    DECLARE v_today VARCHAR(20); --‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßá
    DECLARE v_district_code VARCHAR(10); --‡¶ú‡ßá‡¶≤‡¶æ‡¶∞ ‡¶ï‡ßã‡¶°
    DECLARE v_prefix VARCHAR(10); --CID ‡¶¨‡¶æ WBINC
    DECLARE v_count INT; --‡¶ü‡ßã‡¶ü‡¶æ‡¶≤ ‡¶™‡ßÅ‡¶≤‡¶ø‡¶∂ ‡¶∏‡ßç‡¶ü‡ßá‡¶∂‡¶® ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ

    START TRANSACTION;

--‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: DDMMYYYY
    SET v_today = DATE_FORMAT(NOW(), '%d%m%Y');

--‡¶ú‡ßá‡¶≤‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶•‡ßá‡¶ï‡ßá 4 ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞‡ßá‡¶∞ ‡¶ï‡ßã‡¶°
    SET v_district_code = UPPER(LEFT(REPLACE(p_district, ' ', ''), 4));

--CID ‡¶π‡¶≤‡ßá WBCID, ‡¶®‡¶æ‡¶π‡¶≤‡ßá WBINC
    SET v_prefix = IF(UPPER(p_branch_name) = 'CID', 'WBCID', 'WBINC');

--‡¶Æ‡ßã‡¶ü ‡¶™‡ßÅ‡¶≤‡¶ø‡¶∂ ‡¶∏‡ßç‡¶ü‡ßá‡¶∂‡¶® ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü
    SELECT COUNT(*) INTO v_count FROM police_station; --‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶°‡¶æ‡¶ü‡¶æ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶æ‡¶π‡¶≤‡ßá v_count ‡¶π‡¶¨‡ßá 0‡•§ ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé, v_count ‡¶ï‡¶ñ‡¶®‡ßã NULL ‡¶π‡¶¨‡ßá ‡¶®‡¶æ, ‡¶∏‡¶∞‡ßç‡¶¨‡¶®‡¶ø‡¶Æ‡ßç‡¶® ‡¶π‡¶¨‡ßá 0‡•§

--‡¶á‡¶â‡¶®‡¶ø‡¶ï ‡¶Ü‡¶á‡¶°‡¶ø ‡¶§‡ßà‡¶∞‡¶ø
    SET v_police_id = CONCAT(v_prefix, v_today, v_district_code, v_count + 1); -- 'WBCID09082025BANK1'
--v_count + 1 ‡¶Æ‡¶æ‡¶®‡ßá ‡¶π‡¶≤‡ßã: ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶ñ‡¶æ‡¶≤‡¶ø ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‚Üí 0 + 1 = 1 ‚Üí ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ü‡¶á‡¶°‡¶ø ‡¶π‡¶¨‡ßá ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶Ø‡¶¶‡¶ø 5‡¶ü‡¶æ ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶•‡¶æ‡¶ï‡ßá ‚Üí 5 + 1 = 6 ‚Üí ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ü‡¶á‡¶°‡¶ø ‡¶π‡¶¨‡ßá ‡¶∑‡¶∑‡ßç‡¶† ‡¶Ü‡¶á‡¶°‡¶ø
--NULL ‡¶ö‡ßá‡¶ï
    IF p_officer_name IS NOT NULL AND p_branch_name IS NOT NULL AND p_district IS NOT NULL AND p_password IS NOT NULL THEN
--‡¶™‡ßÅ‡¶≤‡¶ø‡¶∂ ‡¶∏‡ßç‡¶ü‡ßá‡¶∂‡¶® ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü
    INSERT INTO police_station(police_id, officer_name, branch_name, district, password_hash)
VALUES(v_police_id, p_officer_name, p_branch_name, p_district, p_password);

COMMIT;
ELSE
ROLLBACK;
    END IF;
--Node.js ‡¶è ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡¶æ‡¶ü‡¶æ ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶®
    SELECT police_id, officer_name, district FROM police_station WHERE police_id = v_police_id;
END$$

DELIMITER;

// 2. Trigger ‚Äî police_station-‡¶è ‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶π‡¶≤‡ßá ‡¶≤‡¶ó ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá
// Stored Procedure (SP) ‡¶¶‡¶ø‡ßü‡ßá police_station ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶õ‡ßã, 
// ‡¶Ü‡¶∞ ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶è‡¶ï‡¶á ‡¶∏‡¶Æ‡ßü‡ßá AFTER INSERT ‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞‡¶ü‡¶æ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡ßü ‡¶Ø‡ßá‡¶ü‡¶æ invstregistrationregistration_logs ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶≤‡¶ó ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡ßá‡•§

--DROP TRIGGER IF EXISTS trg_after_insert_police_station;
--Trigger ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø SHOW TRIGGERS LIKE 'police_station';
--‡¶Ö‡¶•‡¶¨‡¶æ, ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ú‡¶æ‡¶®‡¶§‡ßá:
--SELECT TRIGGER_NAME
--FROM information_schema.TRIGGERS
--WHERE TRIGGER_SCHEMA = 'mydatabase'  -- ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ
--AND TRIGGER_NAME = 'trg_after_insert_police_station';

DELIMITER $$

CREATE TRIGGER trg_after_insert_police_station
AFTER INSERT ON police_station
FOR EACH ROW
BEGIN
--‡¶≤‡¶ó ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü
    INSERT INTO invstregistrationregistration_logs
    (police_id, officer_name, branch_name, district, created_date, created_time, created_time_ampm)
VALUES(
    NEW.police_id,
    NEW.officer_name,
    NEW.branch_name,
    NEW.district,
    CURDATE(), --YYYY - MM - DD
        TIME_FORMAT(NOW(), '%H:%i:%s'), --24 ‡¶ò‡¶£‡ßç‡¶ü‡¶æ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü(HH: MM: SS)
        DATE_FORMAT(NOW(), '%r')-- 12 ‡¶ò‡¶£‡ßç‡¶ü‡¶æ AM / PM ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü(HH: MM: SS AM / PM)

);
END$$

DELIMITER;

----Fetch login data from police_station & Insert Data to invstregistrationlogin_logs
// Login Logic ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßá - Stored Procedure + Transaction ,  Login ‡¶∏‡¶´‡¶≤ ‡¶π‡¶≤‡ßá ‡¶≤‡¶ó ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá insert ‡¶ï‡¶∞‡¶¨‡ßá,
// ‡¶è‡¶ñ‡¶æ‡¶®‡ßá Trigger Avoid ‡¶ï‡¶∞‡¶æ ‡¶≠‡¶æ‡¶≤‡ßã , ‡¶è‡¶ñ‡¶æ‡¶®‡ßá View useful ‡¶Ø‡¶ñ‡¶® ‡¶ú‡¶ü‡¶ø‡¶≤ Join ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶π‡ßü, 
// officer_name ‡¶¨‡¶æ username (login field) ‡¶è‡¶∞ ‡¶â‡¶™‡¶∞ Index ‡¶∞‡¶æ‡¶ñ‡¶≤‡ßá search/authentication ‡¶Ö‡¶®‡ßá‡¶ï ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶π‡¶¨‡ßá

‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶π‡¶≤‡ßá: SHOW TRIGGERS;
‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶°‡ßç‡¶∞‡¶™ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶≤‡ßá: DROP TRIGGER trg_after_login_log;

CREATE Index - CREATE INDEX idx_police_id ON police_station(police_id, officer_name, branch_name, district);
SHOW INDEX - SHOW INDEX FROM police_station;
Index ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ - DROP INDEX idx_branch_name ON police_station;

--1 ‚úÖ ‡¶™‡ßÅ‡¶≤‡¶ø‡¶∂ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Stored Procedure
DELIMITER $$

CREATE PROCEDURE sp_login_police(
    IN p_police_id VARCHAR(50)-- Police ID ‡¶á‡¶®‡¶™‡ßÅ‡¶ü
)
BEGIN
    DECLARE v_police_id VARCHAR(50);
    DECLARE v_officer_name VARCHAR(255);
    DECLARE v_password_hash VARCHAR(255);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
        SELECT '‚ùå Database Error' AS message;
END;

    START TRANSACTION;

--‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶•‡ßá‡¶ï‡ßá ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶æ
    SELECT police_id, officer_name, password_hash
    INTO v_police_id, v_officer_name, v_password_hash
    FROM police_station
    WHERE police_id = p_police_id;

--‡¶Ø‡¶¶‡¶ø ‡¶§‡¶•‡ßç‡¶Ø ‡¶®‡¶æ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º
    IF v_police_id IS NULL OR v_password_hash IS NULL THEN
ROLLBACK;
        SELECT NULL AS police_id, NULL AS officer_name, NULL AS password_hash, '‚ùå Police ID not found' AS message;
ELSE
COMMIT;
        SELECT v_police_id AS police_id, v_officer_name AS officer_name, v_password_hash AS password_hash, '‚úÖ Data found' AS message;
    END IF;

END$$

DELIMITER;

--2 ‚úÖ ‡¶≤‡¶ó‡¶á‡¶®‡ßá‡¶∞ ‡¶™‡¶∞‡ßá ‡¶≤‡¶ó ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞
DELIMITER $$

CREATE TRIGGER trg_after_login_log
AFTER INSERT ON police_station-- police_station ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡¶¨‡ßá
FOR EACH ROW-- ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‡ßã - ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá
BEGIN
    INSERT INTO invstregistrationlogin_logs(police_id, registered_at)-- ‡¶Ö‡¶°‡¶ø‡¶ü ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
VALUES(NEW.police_id, NOW()); --‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‡ßã - ‡¶è‡¶∞ police_id, 'LOGIN' ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü, ‡¶è‡¶¨‡¶Ç ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶¨‡¶∏‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá
END$$

DELIMITER;

-- ‚úÖ Criminal Information Insert ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Stored Procedure
-- üìå ‡¶ï‡ßá‡¶® Trigger ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶ø‡¶®‡¶ø ?
    --1Ô∏è‚É£ Trigger - ‡¶è‡¶∞ ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶§‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶æ‡ßé API ‡¶§‡ßá ‡¶´‡ßá‡¶∞‡¶§ ‡¶Ü‡¶®‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶®‡¶æ‡•§
--2Ô∏è‚É£ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá API ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶¶‡ßÅ‡¶á ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá‡¶∞ ‡¶°‡¶æ‡¶ü‡¶æ ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶´‡¶ø‡¶∞‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá ‚Üí Trigger ‡¶∏‡ßá‡¶ü‡¶æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá ‡¶®‡¶æ‡•§
--3Ô∏è‚É£ Stored Procedure ‡¶•‡ßá‡¶ï‡ßá insert + select ‡¶è‡¶ï‡¶á ‡¶∏‡¶æ‡¶•‡ßá ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º, Immediate Response ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨‡•§
--4Ô∏è‚É£ Trigger Debug ‡¶ï‡¶∞‡¶æ ‡¶ï‡¶†‡¶ø‡¶® ‚Üí ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶≤‡ßá ‡¶∏‡ßã‡¶∞‡ßç‡¶∏ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶ï‡¶†‡¶ø‡¶®‡•§
--5Ô∏è‚É£ Business Logic SP - ‡¶§‡ßá ‡¶∞‡¶æ‡¶ñ‡¶≤‡ßá API ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶π‡¶ú‡ßá ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤ ‡¶ì ‡¶Æ‡ßá‡¶á‡¶®‡ßç‡¶ü‡ßá‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º, Trigger - ‡¶è ‡¶≤‡ßÅ‡¶ï‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶®‡¶æ‡•§

-- ‡ßß. ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶ú ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßã
USE mydatabase;

ALTER TABLE criminal_info MODIFY photo_url JSON;

ALTER TABLE criminal_info 
ADD COLUMN crStatus ENUM('A', 'I', 'S') NOT NULL DEFAULT 'A';

ALTER TABLE criminal_info 
MODIFY COLUMN crStatus ENUM('A', 'I', 'S') NOT NULL DEFAULT 'A';
--where A: Active, I : Inactive, S : Suspended

-- ‡ß®. ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡ßã‡¶∏‡¶ø‡¶°‡¶ø‡¶â‡¶∞ ‡¶°‡ßç‡¶∞‡¶™ ‡¶ï‡¶∞‡ßã
DROP PROCEDURE IF EXISTS sp_criminal_info;

-- ‡ß©. ‡¶ñ‡ßÅ‡¶¨ ‡¶∏‡¶ø‡¶Æ‡ßç‡¶™‡¶≤ ‡¶™‡ßç‡¶∞‡ßã‡¶∏‡¶ø‡¶°‡¶ø‡¶â‡¶∞ ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì

DELIMITER $$

CREATE PROCEDURE sp_criminal_info(
    IN p_investigOfficer_id VARCHAR(50), --‡¶™‡ßÅ‡¶≤‡¶ø‡¶∂ ‡¶Ü‡¶á‡¶°‡¶ø(‡¶§‡¶¶‡¶®‡ßç‡¶§‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶Ö‡¶´‡¶ø‡¶∏‡¶æ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø)
    IN c_crname VARCHAR(100), --‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶®‡¶æ‡¶Æ
    IN c_craadhaar VARCHAR(20), --‡¶Ü‡¶ß‡¶æ‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞
    IN c_craddress TEXT, --‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ
    IN c_crphone VARCHAR(15), --‡¶´‡ßã‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞
    IN c_crtype VARCHAR(100), --‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßá‡¶∞ ‡¶ß‡¶∞‡¶®(Description table ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø)
    IN c_crfir_place TEXT, --FIR ‡¶è‡¶∞ ‡¶∏‡ßç‡¶•‡¶æ‡¶®
    IN c_creventdate DATE, --‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß ‡¶∏‡¶Ç‡¶ò‡¶ü‡¶®‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ
    IN c_creventtime TIME, --‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß ‡¶∏‡¶Ç‡¶ò‡¶ü‡¶®‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º
    IN c_photo_url JSON, --‡¶õ‡¶¨‡¶ø URL 
    --ALTER TABLE criminal_info MODIFY c_photo_url JSON;
--TEXT ‡¶¶‡¶ø‡ßü‡ßá ‡¶õ‡¶¨‡¶ø URL ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶∞‡¶æ‡¶ñ‡¶≤‡ßá ‡¶ï‡ßÄ ‡¶π‡ßü ?
    --c_photo_url = '["url1","url2","url3"]' ‡¶è‡¶ü‡¶æ ‡¶Ü‡¶∏‡¶≤‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶¨‡ßú ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç, ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶ú ‡¶®‡¶ø‡¶ú‡ßá ‡¶è‡¶ü‡¶æ JSON ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶¨‡ßÅ‡¶ù‡¶¨‡ßá ‡¶®‡¶æ‡•§
--JSON ‡¶ü‡¶æ‡¶á‡¶™ ‡¶¶‡¶ø‡ßü‡ßá ‡¶∞‡¶æ‡¶ñ‡¶≤‡ßá ‡¶ï‡ßÄ ‡¶π‡ßü ?
    -- =["url1", "url2", "url3"]-- ‡¶è‡¶ü‡¶æ JSON ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶∏‡ßá‡¶≠ ‡¶π‡ßü
    IN c_created_at TIMESTAMP, --‡¶Ö‡¶≠‡¶ø‡¶Ø‡ßã‡¶ó ‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶®‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ
    IN c_local_file_path VARCHAR(500)-- ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶•
)
BEGIN
	DECLARE p_investigOfficerID VARCHAR(50); --‡¶™‡ßÅ‡¶≤‡¶ø‡¶∂ ‡¶Ü‡¶á‡¶°‡¶ø(‡¶§‡¶¶‡¶®‡ßç‡¶§‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶Ö‡¶´‡¶ø‡¶∏‡¶æ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø)
    DECLARE last_id INT;
    DECLARE err_msg TEXT DEFAULT '';

--Error handler
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
        GET DIAGNOSTICS CONDITION 1 err_msg = MESSAGE_TEXT;
        SELECT CONCAT('‚ùå Error Occurred: ', err_msg) AS error_message;
ROLLBACK;
END;

    START TRANSACTION;

--‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶•‡ßá‡¶ï‡ßá ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶æ Police Id Present Or Not ?
    SELECT police_id INTO p_investigOfficerID FROM police_station WHERE police_id = p_investigOfficer_id;

--NULL / BLANK ‡¶ö‡ßá‡¶ï
    IF  p_investigOfficerID IS NULL OR TRIM(p_investigOfficerID) = '' OR
        c_crname IS NULL OR TRIM(c_crname) = '' OR
        c_craadhaar IS NULL OR TRIM(c_craadhaar) = '' OR
        c_craddress IS NULL OR TRIM(c_craddress) = '' OR
        c_crphone IS NULL OR TRIM(c_crphone) = '' OR
        c_crtype IS NULL OR TRIM(c_crtype) = '' OR
        c_crfir_place IS NULL OR TRIM(c_crfir_place) = '' OR
        c_creventdate IS NULL OR
        c_creventtime IS NULL OR
        c_photo_url IS NULL OR TRIM(c_photo_url) = '' OR
        c_created_at IS NULL OR
        c_local_file_path IS NULL OR TRIM(c_local_file_path) = ''
THEN
ROLLBACK;
        SELECT '‚ö†Ô∏è Error: One or more input values are NULL or blank' AS error_message;
ELSE
--‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü
        INSERT INTO criminal_info
    (police_id, name, aadhaar, address, phone, photo_url, created_at, local_file_path)
VALUES
    (p_investigOfficerID, c_crname, c_craadhaar, c_craddress, c_crphone, c_photo_url, c_created_at, c_local_file_path);

        SET last_id = LAST_INSERT_ID();

--criminal log ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü
        INSERT INTO criminal_log
    (criminal_id, action, action_time)
VALUES
    (last_id, 'A', c_created_at);

--‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü
        INSERT INTO criminal_description
    (criminal_id, police_id, `type`, fir_place, `date`, `time`, created_at)
VALUES
    (last_id, p_investigOfficerID, c_crtype, c_crfir_place, c_creventdate, c_creventtime, NOW());

--‡¶∏‡¶´‡¶≤ ‡¶π‡¶≤‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶®
SELECT
ci.police_id AS p_investigOfficerID,
    ci.name AS c_crname,
        ci.aadhaar AS c_craadhaar,
            ci.address AS c_craddress,
                ci.phone AS c_crphone,
                    cd.`type` AS crtype,
                        cd.fir_place,
                        cd.`date` AS creventdate,
                            cd.`time` AS creventtime,
                                ci.photo_url AS c_photo_url,
                                    ci.local_file_path AS c_local_file_path,
                                        ci.created_at AS c_created_at
        FROM criminal_info AS ci
        JOIN criminal_description AS cd ON ci.id = last_id 
        WHERE cd.criminal_id = last_id;

COMMIT; -- ‚úÖ ‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶∞‡¶∞ ‡¶®‡¶æ ‡¶π‡¶≤‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ï‡¶Æ‡¶ø‡¶ü ‡¶π‡¶¨‡ßá
    END IF;
END$$

DELIMITER;

CALL sp_criminal_info(
    'P001',
    'Test Name',
    '123456789012',
    'Test Address',
    '9876543210',
    'Robbery',
    'Police Station Area',
    '2025-08-11',
    '14:30:00',
    'http://photo.jpg',
    NOW(),
    '/local/path/photo.jpg'
);

-- ‡ß´. ‡¶è‡¶∞‡¶∞ ‡¶¨‡¶æ ‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç ‡¶¶‡ßá‡¶ñ‡ßã
SHOW WARNINGS;

-- ‚úÖ Criminal Information Update ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Stored Procedure

DROP PROCEDURE IF EXISTS sp_criminal_info_update; --‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶ï‡¶á ‡¶®‡¶æ‡¶Æ‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡ßç‡¶ü‡ßã‡¶∞‡¶° ‡¶™‡ßç‡¶∞‡ßã‡¶∏‡¶ø‡¶°‡¶ø‡¶â‡¶∞ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶∏‡ßá‡¶ü‡¶æ ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡ßá ‡¶Ø‡¶æ‡¶§‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶∞‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü
DELIMITER $$-- MySQL - ‡¶è ‡¶°‡ßá‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡¶æ‡¶∞ ‡¶¨‡¶¶‡¶≤‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ø‡¶æ‡¶§‡ßá ‡¶™‡ßç‡¶∞‡ßã‡¶∏‡¶ø‡¶°‡¶ø‡¶â‡¶∞‡ßá‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï `;` ‡¶ï‡ßá MySQL ‡¶∏‡ßç‡¶ü‡ßá‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶∂‡ßá‡¶∑ ‡¶≠‡ßá‡¶¨‡ßá ‡¶è‡¶ï‡ßç‡¶∏‡¶ø‡¶ï‡¶ø‡¶â‡¶ü ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá

CREATE PROCEDURE sp_criminal_info_update(
    IN p_investigOfficer_id VARCHAR(50), -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶§‡¶¶‡¶®‡ßç‡¶§‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶Ö‡¶´‡¶ø‡¶∏‡¶æ‡¶∞‡ßá‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø
    IN c_crid INT,                       -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø
    IN c_crname VARCHAR(100),            -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶®‡¶æ‡¶Æ
    IN c_craadhaar VARCHAR(20),          -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ü‡¶ß‡¶æ‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞
    IN c_craddress TEXT,                 -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ
    IN c_crphone VARCHAR(15),            -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶´‡ßã‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞
    IN c_crtype VARCHAR(100),            -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßá‡¶∞ ‡¶ß‡¶∞‡¶®
    IN c_crfir_place TEXT,               -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: FIR ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶∏‡ßç‡¶•‡¶æ‡¶®
    IN c_creventdate DATE,               -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß ‡¶∏‡¶Ç‡¶ò‡¶ü‡¶®‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ
    IN c_creventtime TIME,               -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß ‡¶∏‡¶Ç‡¶ò‡¶ü‡¶®‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßü
    IN c_photo_url JSON,                 -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶õ‡¶¨‡¶ø‡¶∞ URL (JSON array)
    IN c_created_at TIMESTAMP,           -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶è‡¶®‡ßç‡¶ü‡ßç‡¶∞‡¶ø ‡¶§‡ßà‡¶∞‡¶ø‡¶∞ ‡¶∏‡¶Æ‡ßü
    IN c_local_file_path VARCHAR(500)    -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶•
)
proc_body:BEGIN   -- ‡¶≤‡ßá‡¶¨‡ßá‡¶≤ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶≤‡ßã, ‡¶Ø‡¶æ‡¶§‡ßá LEAVE ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü
    DECLARE p_criminalID INT;        -- criminal_info ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá‡¶∞ ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤
    DECLARE p_criminaldesID INT;     -- criminal_description ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤
    DECLARE err_msg TEXT DEFAULT ''; -- ‡¶è‡¶∞‡¶∞ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤

    -- SQL exception ‡¶π‡¶≤‡ßá ‡¶ï‡ßÄ ‡¶π‡¶¨‡ßá
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS CONDITION 1 err_msg = MESSAGE_TEXT;
        ROLLBACK;
        SELECT CONCAT('‚ùå Error Occurred: ', err_msg) AS error_message;
    END;
    -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ
    IF  p_investigOfficer_id IS NULL OR TRIM(p_investigOfficer_id) = '' OR
        c_crid IS NULL OR c_crid = 0 OR
        c_crname IS NULL OR TRIM(c_crname) = '' OR
        c_craadhaar IS NULL OR TRIM(c_craadhaar) = '' OR
        c_craddress IS NULL OR TRIM(c_craddress) = '' OR
        c_crphone IS NULL OR TRIM(c_crphone) = '' OR
        c_crtype IS NULL OR TRIM(c_crtype) = '' OR
        c_crfir_place IS NULL OR TRIM(c_crfir_place) = '' OR
        c_creventdate IS NULL OR
        c_creventtime IS NULL OR
        c_photo_url IS NULL OR JSON_VALID(c_photo_url) = 0 OR JSON_LENGTH(c_photo_url) = 0 OR
        c_created_at IS NULL OR
        c_local_file_path IS NULL OR TRIM(c_local_file_path) = '' THEN
            ROLLBACK;
            SELECT '‚ö†Ô∏è Error: One or more input values are NULL or blank' AS error_message;
            LEAVE proc_body;
    END IF;

    START TRANSACTION; --  ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶® ‡¶∂‡ßÅ‡¶∞‡ßÅ

    -- criminal_info ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶ì‡¶á criminal_id ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø ‡¶®‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ
    SELECT id INTO p_criminalID FROM criminal_info WHERE id = c_crid;
    IF p_criminalID IS NULL THEN
        ROLLBACK;
        SELECT '‚ùå Error: Criminal ID not found in criminal_info' AS error_message;
        LEAVE proc_body;
    END IF;

    -- criminal_info ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü
    UPDATE criminal_info
    SET police_id = p_investigOfficer_id,
        name = c_crname,
        aadhaar = c_craadhaar,
        address = c_craddress,
        phone = c_crphone,
        photo_url = c_photo_url,
        created_at = c_created_at,
        local_file_path = c_local_file_path
    WHERE id = c_crid;

    -- criminal_log ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶≤‡¶ó ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
    INSERT INTO criminal_log(criminal_id, action, action_time)
    VALUES(c_crid, 'UPDATE', c_created_at);

    -- criminal_description ‡¶Ü‡¶á‡¶°‡¶ø ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
    SELECT id INTO p_criminaldesID FROM criminal_description WHERE criminal_id = c_crid;
    IF p_criminaldesID IS NULL THEN
        ROLLBACK;
        SELECT '‚ùå Error: No record found in criminal_description for this criminal_id' AS error_message;
        LEAVE proc_body;
    END IF;

    -- criminal_description ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ
    UPDATE criminal_description
    SET police_id = p_investigOfficer_id,
        `type` = c_crtype,
        fir_place = c_crfir_place,
        `date` = COALESCE(c_creventdate, CURDATE()),
        `time` = COALESCE(c_creventtime, CURTIME())
    WHERE criminal_id = c_crid AND id = p_criminaldesID;

    -- ‡¶Ü‡¶™‡¶°‡ßá‡¶ü‡ßá‡¶∞ ‡¶™‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ
    SELECT
        ci.id AS p_criminalID,
        ci.police_id AS p_investigOfficerID,
        ci.name AS c_crname,
        ci.aadhaar AS c_craadhaar,
        ci.address AS c_craddress,
        ci.phone AS c_crphone,
        cd.`type` AS crtype,
        cd.fir_place,
        cd.`date` AS creventdate,
        cd.`time` AS creventtime,
        ci.photo_url AS c_photo_url,
        ci.local_file_path AS c_local_file_path,
        ci.created_at AS c_created_at,
        ci.crStatus AS c_crStatus
    FROM criminal_info AS ci
    JOIN criminal_description AS cd ON ci.id = cd.criminal_id
    WHERE cd.criminal_id = c_crid;

    COMMIT; -- ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶†‡¶ø‡¶ï ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶æ
END$$

DELIMITER; --‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶°‡ßá‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡ßü ‡¶´‡¶ø‡¶∞‡¶ø‡ßü‡ßá ‡¶Ü‡¶®‡¶æ


-- ‚úÖ Criminal Information Status Change ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Stored Procedure
USE mydatabase;
DROP PROCEDURE IF EXISTS sp_set_criminal_status;

DELIMITER $$

CREATE PROCEDURE sp_set_criminal_status(
    IN c_criminal_id INT, --‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶Ø‡ßá ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø ‡¶á‡¶®‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü‡¶ø‡¶≠ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá
    IN c_current_status ENUM('A', 'I', 'S')-- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü: ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏
)
proc_label: BEGIN-- ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶≤‡ßá‡¶¨‡ßá‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶≤‡¶æ‡¶Æ
    DECLARE err_msg TEXT DEFAULT ''; --‡¶è‡¶∞‡¶∞ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤

--SQL ‡¶è‡¶∞‡¶∞ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
        GET DIAGNOSTICS CONDITION 1 err_msg = MESSAGE_TEXT;
        SELECT CONCAT('‚ùå Error Occurred: ', err_msg) AS error_message;
ROLLBACK;
END;

-- ‚ö†Ô∏è ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡¶ø‡¶°‡ßá‡¶∂‡¶®
    IF c_criminal_id IS NULL 
       OR c_current_status NOT IN('A', 'I', 'S') THEN
        SELECT '‚ö†Ô∏è Invalid input parameters!' AS error_message;
        LEAVE proc_label; --‡¶≤‡ßá‡¶¨‡ßá‡¶≤ ‡¶¶‡¶ø‡ßü‡ßá ‡¶¨‡ßá‡¶∞ ‡¶π‡¶ì
    END IF;

    START TRANSACTION;

--1Ô∏è‚É£ criminal_info ‡¶Ü‡¶™‡¶°‡ßá‡¶ü
    UPDATE criminal_info SET crStatus = c_current_status, created_at = NOW() WHERE id = c_criminal_id;

    IF ROW_COUNT() = 0 THEN
ROLLBACK;
        SELECT '‚ö†Ô∏è No matching active record found or already inactive' AS error_message;
        LEAVE proc_label; --‡¶≤‡ßá‡¶¨‡ßá‡¶≤ ‡¶¶‡¶ø‡ßü‡ßá ‡¶¨‡ßá‡¶∞ ‡¶π‡¶ì
    END IF;

--2Ô∏è‚É£ criminal_log ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü
-- INSERT INTO criminal_log(criminal_id, action, action_time)
-- VALUES(c_criminal_id, c_current_status, NOW());
INSERT INTO criminal_log (criminal_id, action, action_time)
VALUES (
    c_criminal_id,
    CONCAT(
        'Status Change - ',
        CASE c_current_status
            WHEN 'A' THEN 'Active'
            WHEN 'I' THEN 'Inactive'
            WHEN 'S' THEN 'Suspended'
            ELSE 'Unknown'
        END
    ),
    NOW()
);

COMMIT;

-- ‚úÖ criminal_info ‡¶•‡ßá‡¶ï‡ßá ‡¶´‡¶æ‡¶á‡¶®‡¶æ‡¶≤ ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
SELECT
ci.id AS crcriminal_id,
    ci.crStatus,
    ci.created_at,
    CONCAT(
        '‚úÖ Criminal Record Status Changed to ',
        CASE c_current_status
        WHEN 'A' THEN 'Active'
        WHEN 'I' THEN 'Inactive'
        WHEN 'S' THEN 'Suspended'
        ELSE 'Unknown'
    END
    ) AS msg
    FROM criminal_info ci
    WHERE ci.id = c_criminal_id;

END proc_label$$
DELIMITER;


-- ‚úÖ Individual View ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Stored Procedure
USE mydatabase;
DROP PROCEDURE IF EXISTS sp_police_criminal_individualview;

DELIMITER $$

CREATE PROCEDURE sp_police_criminal_individualview(
    IN c_criminal_id INT,
    IN p_police_id VARCHAR(50)
)
proc_label: BEGIN
    DECLARE err_msg TEXT DEFAULT '';     

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
        GET DIAGNOSTICS CONDITION 1 err_msg = MESSAGE_TEXT;
        SELECT CONCAT('‚ùå Error Occurred: ', err_msg) AS error_message;
END;

--‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡¶ø‡¶°‡ßá‡¶∂‡¶®
    IF c_criminal_id IS NULL OR p_police_id IS NULL THEN
        SELECT '‚ö†Ô∏è Invalid input parameters!' AS error_message;
        LEAVE proc_label;
    END IF;

--‡¶Æ‡ßÇ‡¶≤ ‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü
SELECT
invst.police_id AS invst_police_id,
    invst.officer_name AS invst_officer_name,
        invst.branch_name AS invst_branch_name,
            invst.district AS invst_district,
                ci.name AS c_crname,
                    ci.aadhaar AS c_craadhaar,
                        ci.address AS c_craddress,
                            ci.phone AS c_crphone,
                                cd.`type` AS crtype,
                                    cd.fir_place AS crfir_place,
                                        cd.`date` AS creventdate,
                                            cd.`time` AS creventtime,
                                                ci.photo_url AS c_photo_url,
                                                    ci.local_file_path AS c_local_file_path,
                                                        ci.created_at AS c_created_at              
    FROM view_police_station AS invst
    JOIN view_criminal_info AS ci 
        ON invst.police_id = p_police_id
    JOIN view_criminal_description AS cd 
        ON ci.id = c_criminal_id
	WHERE invst.police_id = p_police_id 
      AND ci.id = c_criminal_id
    LIMIT 1;

--‡¶Ø‡¶¶‡¶ø ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶á ‡¶®‡¶æ ‡¶Æ‡ßá‡¶≤‡ßá
    IF ROW_COUNT() = 0 THEN
        SELECT NULL AS police_id, NULL AS id, '‚ùå Police ID & Criminal ID not found' AS message;
    END IF;

END proc_label$$
DELIMITER;

-- ‚úÖ All View ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Stored Procedure
USE mydatabase;
DROP PROCEDURE IF EXISTS sp_all_criminal_statusview;

DELIMITER $$

CREATE PROCEDURE sp_all_criminal_statusview(
    IN p_police_id VARCHAR(50)
)
proc_label: BEGIN
    DECLARE err_msg TEXT DEFAULT '';     

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
        GET DIAGNOSTICS CONDITION 1 err_msg = MESSAGE_TEXT;
        SELECT CONCAT('‚ùå Error Occurred: ', err_msg) AS error_message;
END;

--‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡¶ø‡¶°‡ßá‡¶∂‡¶®
    IF p_police_id IS NULL THEN
        SELECT '‚ö†Ô∏è Invalid input parameters!' AS error_message;
        LEAVE proc_label;
    END IF;

--‡¶Æ‡ßÇ‡¶≤ ‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü
SELECT
invst.police_id AS invst_police_id,
    invst.officer_name AS invst_officer_name,
        invst.branch_name AS invst_branch_name,
            invst.district AS invst_district,
                ci.name AS c_crname,
                    ci.aadhaar AS c_craadhaar,
                        ci.address AS c_craddress,
                            ci.phone AS c_crphone,
                                cd.`type` AS crtype,
                                    cd.fir_place AS crfir_place,
                                        cd.`date` AS creventdate,
                                            cd.`time` AS creventtime,
                                                ci.photo_url AS c_photo_url,
                                                    ci.local_file_path AS c_local_file_path,
                                                        ci.created_at AS c_created_at              
    FROM view_police_station AS invst
    JOIN view_criminal_info AS ci 
        ON invst.police_id = p_police_id
    JOIN view_criminal_description AS cd 
        ON ci.id = cd.criminal_id;

--‡¶Ø‡¶¶‡¶ø ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶á ‡¶®‡¶æ ‡¶Æ‡ßá‡¶≤‡ßá
    IF ROW_COUNT() = 0 THEN
        SELECT NULL AS police_id, NULL AS id, '‚ùå Police ID & Criminal ID not found' AS message;
    END IF;

END proc_label$$
DELIMITER;

-- ‚úÖ Individual View Data(Make PDF) ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Stored Procedure
USE mydatabase;
DROP PROCEDURE IF EXISTS sp_get_criminal_info;

DELIMITER $$

CREATE PROCEDURE sp_get_criminal_info(
    IN c_criminal_id INT, --Criminal ID
    IN p_police_id VARCHAR(50)-- Police ID
)
proc_label: BEGIN
    DECLARE err_msg TEXT DEFAULT '';

-- ‚ùå Error Handler
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
        GET DIAGNOSTICS CONDITION 1 err_msg = MESSAGE_TEXT;
        SELECT CONCAT('‚ùå Error Occurred: ', err_msg) AS error_message;
END;

--‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶ö‡ßá‡¶ï
    IF c_criminal_id IS NULL OR p_police_id IS NULL OR p_police_id = '' THEN
        SELECT '‚ö†Ô∏è Invalid input parameters!' AS error_message;
        LEAVE proc_label;
    END IF;

--‡¶°‡ßá‡¶ü‡¶æ ‡¶´‡ßá‡¶ö
SELECT
invst.police_id         AS invst_police_id,
    invst.officer_name      AS invst_officer_name,
        invst.branch_name       AS invst_branch_name,
            invst.district          AS invst_district,
                ci.name                 AS c_crname,
                    ci.aadhaar              AS c_craadhaar,
                        ci.address              AS c_craddress,
                            ci.phone                AS c_crphone,
                                cd.`type`               AS crtype,
                                    cd.fir_place            AS crfir_place,
                                        cd.`date`               AS creventdate,
                                            cd.`time`               AS creventtime,
                                                ci.photo_url            AS c_photo_url,
                                                    ci.local_file_path      AS c_local_file_path,
                                                        ci.created_at           AS c_created_at
    FROM view_police_station AS invst
    JOIN view_criminal_info AS ci 
        ON ci.id = c_criminal_id
    JOIN view_criminal_description AS cd 
        ON cd.criminal_id = ci.id
    WHERE invst.police_id = p_police_id
      AND ci.id = c_criminal_id
    LIMIT 1;

-- ‚ùå ‡¶Ø‡¶¶‡¶ø ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶á ‡¶®‡¶æ ‡¶Æ‡ßá‡¶≤‡ßá
    IF ROW_COUNT() = 0 THEN
        SELECT NULL AS police_id, NULL AS id, '‚ùå Police ID & Criminal ID not found' AS message;
    END IF;

END proc_label$$
DELIMITER;

CALL sp_get_criminal_info(27, 'WBCID09082025BANK1');

-- ‚úÖ Individual EXCEL View Data(Make EXCEL) ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Stored Procedure

USE mydatabase;                                           -- ‚ñ∂Ô∏è ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã

DROP PROCEDURE IF EXISTS sp_criminal_full_detailsForExcelView;   -- ‚ñ∂Ô∏è ‡¶Ø‡¶¶‡¶ø ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶è‡¶ï‡¶á ‡¶®‡¶æ‡¶Æ‡ßá SP ‡¶•‡¶æ‡¶ï‡ßá, ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì

DELIMITER $$

CREATE PROCEDURE sp_criminal_full_detailsForExcelView(
    IN c_criminal_id INT                                  -- ‚ñ∂Ô∏è ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡¶æ‡¶Æ‡¶ø‡¶ü‡¶æ‡¶∞: criminal_id
)
BEGIN
    DECLARE err_msg TEXT DEFAULT ''; -- ‡¶è‡¶∞‡¶∞ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤
    -- SQL exception ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS CONDITION 1 err_msg = MESSAGE_TEXT;
        ROLLBACK;
        SELECT CONCAT('‚ùå Error Occurred: ', err_msg) AS error_message;
    END;

    -- ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ (criminal_id NULL ‡¶¨‡¶æ 0 ‡¶π‡¶≤‡ßá error ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá)
    IF c_criminal_id IS NULL OR c_criminal_id = 0 THEN -- ‚ñ∂Ô∏è INT ‡¶ü‡¶æ‡¶á‡¶™ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤‡¶ï‡ßá TRIM ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü ‡¶®‡¶æ‡•§ ‡¶è‡¶ü‡¶æ ‡¶ï‡ßá‡¶¨‡¶≤ VARCHAR/TEXT ‡¶è ‡¶ö‡¶≤‡ßá‡•§ ‡¶Ø‡ßá‡¶π‡ßá‡¶§‡ßÅ criminal_id ‡¶∏‡¶¨‡¶∏‡¶Æ‡ßü ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ, ‡¶∂‡ßÅ‡¶ß‡ßÅ IS NULL ‡¶Ü‡¶∞ =0 ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá‡¶á ‡¶Ø‡¶•‡ßá‡¶∑‡ßç‡¶ü‡•§
        ROLLBACK;
        SELECT '‚ö†Ô∏è Error: criminal_id cannot be NULL or 0' AS error_message;
    ELSE
        -- ‚úÖ Criminal Info + Description JOIN ‡¶ï‡¶∞‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶Ü‡¶®‡¶æ
        SELECT
            ci.id               AS criminal_id,           -- ‚ñ∂Ô∏è ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø
            ci.police_id        AS investigOfficer_id,    -- ‚ñ∂Ô∏è ‡¶ï‡ßã‡¶® ‡¶Ö‡¶´‡¶ø‡¶∏‡¶æ‡¶∞ ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡ßá‡¶õ‡ßá
            ci.`name`           AS crname,                -- ‚ñ∂Ô∏è ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßÄ‡¶∞ ‡¶®‡¶æ‡¶Æ
            ci.aadhaar          AS craadhaar,             -- ‚ñ∂Ô∏è ‡¶Ü‡¶ß‡¶æ‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞
            ci.address          AS craddress,             -- ‚ñ∂Ô∏è ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ
            ci.phone            AS crphone,               -- ‚ñ∂Ô∏è ‡¶´‡ßã‡¶®
            ci.photo_url        AS photo_url_json,        -- ‚ñ∂Ô∏è ‡¶ï‡ßç‡¶≤‡¶æ‡¶â‡¶° URL ‡¶ó‡ßÅ‡¶≤‡ßã (JSON ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç)
            ci.local_file_path  AS local_path_json,       -- ‚ñ∂Ô∏è ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶™‡¶æ‡¶• ‡¶ó‡ßÅ‡¶≤‡ßã (JSON ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç)
            ci.created_at       AS created_at,            -- ‚ñ∂Ô∏è ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶∏‡¶Æ‡ßü
            cd.`type`           AS crtype,                -- ‚ñ∂Ô∏è ‡¶Ö‡¶™‡¶∞‡¶æ‡¶ß‡ßá‡¶∞ ‡¶ß‡¶∞‡¶®
            cd.fir_place        AS crfir_place,           -- ‚ñ∂Ô∏è FIR ‡¶π‡¶ì‡ßü‡¶æ ‡¶∏‡ßç‡¶•‡¶æ‡¶®
            cd.`date`           AS creventdate,           -- ‚ñ∂Ô∏è ‡¶ò‡¶ü‡¶®‡¶æ‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ
            cd.`time`           AS creventtime,           -- ‚ñ∂Ô∏è ‡¶ò‡¶ü‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü
            cd.created_at       AS desc_created_at        -- ‚ñ∂Ô∏è Description ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶∏‡¶Æ‡ßü
        FROM criminal_info AS ci
        LEFT JOIN criminal_description AS cd
               ON cd.criminal_id = ci.id
        WHERE ci.id = c_criminal_id;
    END IF;
END$$

DELIMITER ;


